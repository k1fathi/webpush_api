name: webpush-api

services:
  web:
    container_name: webpush_api_web
    build: .
    ports:
      - "8000:8000"
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - PYTHONPATH=/app
      - PYTHONUNBUFFERED=1
      - API_HOST=0.0.0.0
      - API_PORT=8000
    volumes:
      - .:/app
    command: >
      bash -c "
        echo 'Waiting for services...' &&
        ./scripts/wait-for-it.sh db 5432 &&
        ./scripts/wait-for-rabbitmq.sh rabbitmq 5672 &&
        echo 'Initializing database...' &&
        python -m core.database &&
        echo 'Starting API server...' &&
        exec uvicorn api.main:app --host 0.0.0.0 --port 8000 --reload
      "
    restart: always
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 20s

  celery_worker:
    container_name: webpush_api_worker
    build: .
    command: >
      ./scripts/wait-for-it.sh db 5432 --
      celery --app workers.celery_worker:celery_app worker --loglevel=info --queues=notifications
    working_dir: /app
    depends_on:
      db:
        condition: service_healthy
      rabbitmq:
        condition: service_started
    env_file:
      - .env
    volumes:
      - .:/app
    environment:
      - PYTHONPATH=/app
    restart: unless-stopped

  db:
    container_name: webpush_api_db
    image: postgres:13
    command: postgres -c 'max_connections=100' -c 'shared_buffers=256MB'
    env_file:
      - .env
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "${POSTGRES_EXTERNAL_PORT}:${POSTGRES_PORT}"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d postgres"]
      interval: 10s
      timeout: 5s
      retries: 5
      start_period: 30s

  rabbitmq:
    container_name: webpush_api_rabbitmq
    image: rabbitmq:3-management
    user: rabbitmq
    ports:
      - "${RABBITMQ_EXTERNAL_PORT}:${RABBITMQ_PORT}"
      - "${RABBITMQ_MANAGEMENT_PORT}:15672"
    env_file:
      - .env
    volumes:
      - ./config/rabbitmq.conf:/etc/rabbitmq/rabbitmq.conf
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      - RABBITMQ_DEFAULT_USER=${RABBITMQ_USER}
      - RABBITMQ_DEFAULT_PASS=${RABBITMQ_PASS}
      - RABBITMQ_ERLANG_COOKIE=webpush_cookie_123
      - RABBITMQ_CONFIG_FILE=/etc/rabbitmq/rabbitmq.conf
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "-q", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
      start_period: 10s

volumes:
  postgres_data:
  rabbitmq_data: